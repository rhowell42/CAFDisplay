#include "services_common_icarus.fcl"
#include "channelmapping_icarus.fcl"

#include "correctionservices_icarus.fcl"
#include "seedservice.fcl"
#include "particleinventoryservice.fcl"
#include "backtrackerservice.fcl"
#include "photonbacktrackerservice.fcl"
#include "mccheatermodules.fcl"

#include "cafmaker_defs.fcl"

process_name: CAFmaker

services:
{
  ParticleInventoryService:  @local::standard_particleinventoryservice
  BackTrackerService:        @local::standard_backtrackerservice
  @table::icarus_wirecalibration_minimum_services

  SpaceChargeService: @local::icarus_spacecharge
  NuRandomService: @local::per_event_NuRandomService
}


outputs:
{
  outpid:
  {
    dataTier: cafana # for grid
    streamName: out1 # for grid
    module_type: RootOutput
    fileName:    "stage2_r%r_s%s.root"
    saveMemoryObjectThreshold: 0
  }
}

physics:
{
 
  producers: {
    @table::caf_preprocess_producers
  }

  runprod: [ @sequence::caf_preprocess_sequence, cafmaker]
  stream1:       [  ]
  trigger_paths: [ runprod ] 
  end_paths:     [ stream1 ]
}

physics.producers.cafmaker.FillHits: true
